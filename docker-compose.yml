version: "3.9"

services:
  comicskitesdb:
    image: postgres
    container_name: comicskitesdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: comics
    ports:
      - "6432:5432"
    volumes:
    - ./postgres-db:/var/lib/postgresql/data
    networks:
      - my-network

  comicskitesback:
    build:
      context: ./backend_proyecto_final
    container_name: comicskitesback
    restart: always
    depends_on:
      - comicskitesdb
    ports:
      - "5000:5000"
    networks:
      - my-network

  comicskitesfront:
    build:
      context: ./comicskite_front
    container_name: comicskitesfront
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - comicskitesback
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
# version: "3"

# services:
#   comicskitesdb:
#     image: postgres
#     container_name: comicskitesdb
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: comics
#     ports:
#       - "6432:5432"
#     networks:
#       - my-network

#   comicskitesback:
#     build:
#       context: ./backend_proyecto_final
#     container_name: comicskitesback
#     restart: always
#     depends_on:
#       - comicskitesdb
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./comics.sql:/docker-entrypoint-initdb.d/comics.sql
#     networks:
#       - my-network

#   comicskitesfront:
#     build:
#       context: ./comicskite_front
#     container_name: comicskitesfront
#     restart: always
#     ports:
#       - "5000:3000"
#     depends_on:
#       - comicskitesback
#     networks:
#       - my-network

# networks:
#   my-network:
#     driver: bridge